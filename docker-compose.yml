version: '3.8'

services:
  # Backend services
  mm-backend:
    build:
      context: ./packages/mm-backend
      dockerfile: Dockerfile
    container_name: mm-backend
    working_dir: /usr/src/app/packages/mm-backend
    command: ["pnpm", "start"]
    ports:
      - "3000:3000"
    environment:
      # Connect to services using container names
      POSTGRES_HOST: mm-postgres
      REDIS_URL: redis://mm-redis:6379
      TRADING_STRATEGY_EXECUTION_URL: http://tse-backend:3001
      # Other environment variables from .env
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      MIXIN_APP_ID: ${MIXIN_APP_ID}
      MIXIN_SESSION_ID: ${MIXIN_SESSION_ID}
      MIXIN_SERVER_PUBLIC_KEY: ${MIXIN_SERVER_PUBLIC_KEY}
      MIXIN_SESSION_PRIVATE_KEY: ${MIXIN_SESSION_PRIVATE_KEY}
      MIXIN_SPEND_PRIVATE_KEY: ${MIXIN_SPEND_PRIVATE_KEY}
      MIXIN_OAUTH_SECRET: ${MIXIN_OAUTH_SECRET}
      MIXIN_OAUTH_SCOPE: ${MIXIN_OAUTH_SCOPE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_LOGGING_LEVEL: ${DATABASE_LOGGING_LEVEL}
      DATABASE_SYNCHRONIZE: ${DATABASE_SYNCHRONIZE}
      DATABASE_AUTO_RUN_MIGRATIONS: ${DATABASE_AUTO_RUN_MIGRATIONS}
      DATABASE_SSL: ${DATABASE_SSL}
    depends_on:
      - mm-postgres
      - mm-redis
      - tse-backend
    restart: unless-stopped

  tse-backend:
    build:
      context: ./packages/tse-backend
      dockerfile: Dockerfile
    container_name: tse-backend
    working_dir: /usr/src/app/packages/tse-backend
    command: ["pnpm", "start"]
    ports:
      - "3001:3001"
    environment:
      POSTGRES_HOST: mm-postgres
      REDIS_URL: redis://mm-redis:6379
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DATABASE}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_LOGGING_LEVEL: ${DATABASE_LOGGING_LEVEL}
      DATABASE_SYNCHRONIZE: ${DATABASE_SYNCHRONIZE}
      DATABASE_AUTO_RUN_MIGRATIONS: ${DATABASE_AUTO_RUN_MIGRATIONS}
      DATABASE_SSL: ${DATABASE_SSL}
    depends_on:
      - mm-postgres
      - mm-redis
    restart: unless-stopped

  # Database services
  mm-postgres:
    image: postgres:14-alpine
    container_name: mm-postgres
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-mr_market_v2}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mm-redis:
    image: redis:7-alpine
    container_name: mm-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: